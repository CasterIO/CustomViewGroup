apply plugin: 'com.android.application'

ext.versions = [
    // Android
    targetSdkVersion: 26,
    minSdkVersion   : 19,
    buildtools      : "26.0.0",
    support         : "27.0.2",

    // Components
    constraintlayout: "1.1.0-beta3",

    // Testing
    espresso        : "3.0.1",
    junit           : "4.12"
]

def versionMajor = 1
def versionMinor = 0
def versionPatch = 0
def versionBuild = 0


android {
    compileSdkVersion versions.targetSdkVersion
    buildToolsVersion versions.buildtools
    defaultConfig {
        applicationId "io.caster.customviewgroup"
        minSdkVersion versions.minSdkVersion
        targetSdkVersion versions.targetSdkVersion
        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    buildToolsVersion '26.0.2'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Android
    implementation "com.android.support:support-v4:$versions.support"
    implementation "com.android.support:appcompat-v7:$versions.support"
    implementation "com.android.support:design:$versions.support"

    // Android: Components
    implementation "com.android.support.constraint:constraint-layout:$versions.constraintlayout"

    // Utility

    // Testing
    androidTestImplementation("com.android.support.test.espresso:espresso-core:$versions.espresso", {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.google.code.findbugs'
    })
    testImplementation "junit:junit:$versions.junit"
}
